# coding: utf-8

from __future__ import absolute_import

from flask_server.swagger_server import util
from flask_server.swagger_server.models.base_model_ import Model


class Image(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, bytestring: str = None, id: int = None, cost: float = None):  # noqa: E501
        """Image - a model defined in Swagger

        :param bytestring: The bytestring of this Image.  # noqa: E501
        :type bytestring: str
        :param id: The id of this Image.  # noqa: E501
        :type id: int
        :param cost: The cost of this Image.  # noqa: E501
        :type cost: float
        """
        self.swagger_types = {
            'bytestring': str,
            'id': int,
            'cost': float
        }

        self.attribute_map = {
            'bytestring': 'bytestring',
            'id': 'id',
            'cost': 'cost'
        }

        self._bytestring = bytestring
        self._id = id
        self._cost = cost

    @classmethod
    def from_dict(cls, dikt) -> 'Image':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Image of this Image.  # noqa: E501
        :rtype: Image
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bytestring(self) -> str:
        """Gets the bytestring of this Image.


        :return: The bytestring of this Image.
        :rtype: str
        """
        return self._bytestring

    @bytestring.setter
    def bytestring(self, bytestring: str):
        """Sets the bytestring of this Image.


        :param bytestring: The bytestring of this Image.
        :type bytestring: str
        """

        self._bytestring = bytestring

    @property
    def id(self) -> int:
        """Gets the id of this Image.


        :return: The id of this Image.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Image.


        :param id: The id of this Image.
        :type id: int
        """

        self._id = id

    @property
    def cost(self) -> float:
        """Gets the cost of this Image.


        :return: The cost of this Image.
        :rtype: float
        """
        return self._cost

    @cost.setter
    def cost(self, cost: float):
        """Sets the cost of this Image.


        :param cost: The cost of this Image.
        :type cost: float
        """

        self._cost = cost
