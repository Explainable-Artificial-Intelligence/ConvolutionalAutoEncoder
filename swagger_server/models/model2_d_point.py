# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class Model2DPoint(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, x: float=None, y: float=None, cluster: int=None):
        """
        Model2DPoint - a model defined in Swagger

        :param x: The x of this Model2DPoint.
        :type x: float
        :param y: The y of this Model2DPoint.
        :type y: float
        :param cluster: The cluster of this Model2DPoint.
        :type cluster: int
        """
        self.swagger_types = {
            'x': float,
            'y': float,
            'cluster': int
        }

        self.attribute_map = {
            'x': 'x',
            'y': 'y',
            'cluster': 'cluster'
        }

        self._x = x
        self._y = y
        self._cluster = cluster

    @classmethod
    def from_dict(cls, dikt) -> 'Model2DPoint':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The 2DPoint of this Model2DPoint.
        :rtype: Model2DPoint
        """
        return deserialize_model(dikt, cls)

    @property
    def x(self) -> float:
        """
        Gets the x of this Model2DPoint.

        :return: The x of this Model2DPoint.
        :rtype: float
        """
        return self._x

    @x.setter
    def x(self, x: float):
        """
        Sets the x of this Model2DPoint.

        :param x: The x of this Model2DPoint.
        :type x: float
        """

        self._x = x

    @property
    def y(self) -> float:
        """
        Gets the y of this Model2DPoint.

        :return: The y of this Model2DPoint.
        :rtype: float
        """
        return self._y

    @y.setter
    def y(self, y: float):
        """
        Sets the y of this Model2DPoint.

        :param y: The y of this Model2DPoint.
        :type y: float
        """

        self._y = y

    @property
    def cluster(self) -> int:
        """
        Gets the cluster of this Model2DPoint.

        :return: The cluster of this Model2DPoint.
        :rtype: int
        """
        return self._cluster

    @cluster.setter
    def cluster(self, cluster: int):
        """
        Sets the cluster of this Model2DPoint.

        :param cluster: The cluster of this Model2DPoint.
        :type cluster: int
        """

        self._cluster = cluster

