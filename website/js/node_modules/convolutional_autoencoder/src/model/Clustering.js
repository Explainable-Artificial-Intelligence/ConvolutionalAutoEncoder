/**
 * Convolutional Autoencoder
 * WebUI to build, train and tune a Convolutional Autoencoder
 *
 * OpenAPI spec version: 1.1.1
 * Contact: leon.schuetz@student.uni-tuebingen.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Point2D'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Point2D'));
  } else {
    // Browser globals (root is window)
    if (!root.ConvolutionalAutoencoder) {
      root.ConvolutionalAutoencoder = {};
    }
    root.ConvolutionalAutoencoder.Clustering = factory(root.ConvolutionalAutoencoder.ApiClient, root.ConvolutionalAutoencoder.Point2D);
  }
}(this, function(ApiClient, Point2D) {
  'use strict';




  /**
   * The Clustering model module.
   * @module model/Clustering
   * @version 1.1.1
   */

  /**
   * Constructs a new <code>Clustering</code>.
   * @alias module:model/Clustering
   * @class
   */
  var exports = function() {
    var _this = this;







  };

  /**
   * Constructs a <code>Clustering</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Clustering} obj Optional instance to populate.
   * @return {module:model/Clustering} The populated <code>Clustering</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('minX')) {
        obj['minX'] = ApiClient.convertToType(data['minX'], 'Number');
      }
      if (data.hasOwnProperty('maxX')) {
        obj['maxX'] = ApiClient.convertToType(data['maxX'], 'Number');
      }
      if (data.hasOwnProperty('minY')) {
        obj['minY'] = ApiClient.convertToType(data['minY'], 'Number');
      }
      if (data.hasOwnProperty('maxY')) {
        obj['maxY'] = ApiClient.convertToType(data['maxY'], 'Number');
      }
      if (data.hasOwnProperty('nClusters')) {
        obj['nClusters'] = ApiClient.convertToType(data['nClusters'], 'Number');
      }
      if (data.hasOwnProperty('points')) {
        obj['points'] = ApiClient.convertToType(data['points'], [Point2D]);
      }
    }
    return obj;
  }

  /**
   * @member {Number} minX
   */
  exports.prototype['minX'] = undefined;
  /**
   * @member {Number} maxX
   */
  exports.prototype['maxX'] = undefined;
  /**
   * @member {Number} minY
   */
  exports.prototype['minY'] = undefined;
  /**
   * @member {Number} maxY
   */
  exports.prototype['maxY'] = undefined;
  /**
   * @member {Number} nClusters
   */
  exports.prototype['nClusters'] = undefined;
  /**
   * @member {Array.<module:model/Point2D>} points
   */
  exports.prototype['points'] = undefined;



  return exports;
}));


