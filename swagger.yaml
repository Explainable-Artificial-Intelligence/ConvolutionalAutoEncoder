swagger: '2.0'
info:
  description: 'WebUI to build, train and tune a Convolutional Autoencoder'
  version: 1.0.7
  title: Convolutional Autoencoder
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: leon.schuetz@student.uni-tuebingen.de
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: 'localhost:8080'
basePath: /v2
tags:
  - name: load
    description: All methods corresponding to the input data
  - name: build
    description: All methods corresponding to the learning parameters
  - name: train
    description: All methods corresponding to the CAE training
  - name: visualize
    description: All methods corresponding to the CAE visualisation
  - name: tune
    description: All methods corresponding to the CAE parameter tuning
schemes:
  - http
paths:
  /load/loadFile:
    post:
      tags:
        - load
      summary: Load a train/test data file
      description: Load a data file in different data formats
      operationId: loadFile
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: filename
          in: query
          required: true
          type: string
          format: string
          default: data/mnist_train_data.npy
        - name: datasetname
          in: query
          description: name for dataset on the server
          required: false
          type: string
          format: string
          default: train_data
        - name: read_labels
          in: query
          description: true to read labels
          required: false
          type: boolean
          default: false
        - name: data_type
          in: query
          description: determines the data format of the input file
          required: false
          type: string
          format: string
          default: auto
      responses:
        '200':
          description: file successful loaded
        '404':
          description: File not found
        '415':
          description: File parsing error
  /load/getImages:
    get:
      tags:
        - load
      summary: returns a subset of input/output images
      description: images are encoded as png byte strings
      operationId: getImages
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: start_idx
          in: query
          description: name for dataset on the server
          required: true
          type: integer
          format: int32
          default: 0
        - name: end_idx
          in: query
          description: name for dataset on the server
          required: true
          type: integer
          format: int32
          default: 10
        - name: datasetname
          in: query
          description: name for dataset on the server
          required: false
          type: string
          format: string
          default: train_data
        - name: sort_by
          in: query
          description: defines the sorting of the input images
          required: false
          type: string
        - name: filter
          in: query
          description: the values which should be filtered (whitelist)
          required: false
          type: string
        - name: output
          in: query
          description: if true returns AE output Images instead of input Images
          required: false
          type: boolean
          default: false
      responses:
        '200':
          description: Images successfully returned
          schema:
            $ref: '#/definitions/ImageData'
        '404':
          description: No data found
        '415':
          description: Index out of bounds
  /load/resetAllBatchIndices:
    post:
      tags:
        - load
      summary: resets all batch indices of all image sets
      description: resets all batch indices of all image sets
      operationId: resetAllBatchIndices
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: All batch indices reset
  /load/resetBatchIndex:
    post:
      tags:
        - load
      summary: resets the batch index of the image set
      description: resets the batch index of the image set
      operationId: resetBatchIndex
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: dataset_name
          in: query
          description: name for dataset on the server
          required: false
          type: string
          default: train_data
        - name: output
          in: query
          description: reset output image batch index instead of input images
          required: false
          type: boolean
          default: false
      responses:
        '200':
          description: Batch index reset
        '404':
          description: dataset not found
  /load/getImageBatch:
    get:
      tags:
        - load
      summary: returns the next batch of input/output images
      description: images are encoded as png byte strings
      operationId: getImageBatch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: batch_size
          in: query
          description: defines the number of return images
          required: false
          type: integer
          format: int32
          default: 100
        - name: datasetname
          in: query
          description: name for dataset on the server
          required: false
          type: string
          format: string
          default: train_data
        - name: sort_by
          in: query
          description: defines the sorting of the input images
          required: false
          type: string
        - name: filter
          in: query
          description: the values which should be filtered (whitelist)
          required: false
          type: string
        - name: output
          in: query
          description: if true returns AE output Images instead of input Images
          required: false
          type: boolean
          default: false
      responses:
        '200':
          description: Images successfully returned
          schema:
            $ref: '#/definitions/ImageData'
        '404':
          description: No data found
        '415':
          description: Index out of bounds
  /load/getRandomImages:
    get:
      tags:
        - load
      summary: returns the next batch of input/output images
      description: images are encoded as png byte strings
      operationId: getRandomImages
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: batch_size
          in: query
          description: defines the number of return images
          required: false
          type: integer
          format: int32
          default: 100
        - name: datasetname
          in: query
          description: name for dataset on the server
          required: false
          type: string
          format: string
          default: train_data
        - name: sort_by
          in: query
          description: defines the sorting of the input images
          required: false
          type: string
        - name: filter
          in: query
          description: the values which should be filtered (whitelist)
          required: false
          type: string
        - name: output
          in: query
          description: if true returns AE output Images instead of input Images
          required: false
          type: boolean
          default: false
      responses:
        '200':
          description: Images successfully returned
          schema:
            $ref: '#/definitions/ImageData'
        '404':
          description: No data found
        '415':
          description: Index out of bounds
  /load/getImageById:
    get:
      tags:
        - load
      summary: returns a single input/output image
      description: images are encoded as png byte strings
      operationId: getImageById
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: query
          description: defines the id of the images
          required: true
          type: integer
          format: int32
        - name: datasetname
          in: query
          description: name for dataset on the server
          required: false
          type: string
          format: string
          default: train_data
        - name: sort_by
          in: query
          description: defines the sorting of the input images
          required: false
          type: string
        - name: filter
          in: query
          description: the values which should be filtered (whitelist)
          required: false
          type: string
        - name: output
          in: query
          description: if true returns AE output Images instead of input Images
          required: false
          type: boolean
          default: false
      responses:
        '200':
          description: Images successfully returned
          schema:
            $ref: '#/definitions/ImageData'
        '404':
          description: No data found
        '415':
          description: Index out of bounds
  /build/getInputShape:
    get:
      tags:
        - build
      summary: returns the input shape of the train data
      description: returns the input shape of the train data
      operationId: getInputShape
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: dataset_name
          in: query
          description: name of the dataset
          required: false
          type: string
          default: train_data
      responses:
        '202':
          description: Input shape
          schema:
            type: array
            items:
              type: integer
              format: int32
          
        '404':
          description: Dataset not found
  /build/buildANN:
    post:
      tags:
        - build
      summary: passes all learning and ANN parameters to the server
      description: Includes learning parameters and ANN topology
      operationId: buildANN
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: inputParameters
          in: body
          description: object with all tunable parameters
          required: true
          schema:
            $ref: '#/definitions/ParameterList'
      responses:
        '202':
          description: Parameters successfully committed
        '415':
          description: File parsing error
  /build/getANNParameter:
    get:
      tags:
        - build
      summary: returns the parameter set of the created ANN
      description: returns a object of type ParameterList
      operationId: getANNParameter
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Parameters successfully returned
          schema:
            $ref: '#/definitions/ParameterList'
        '404':
          description: Ressource not found
  /train/controlTraining:
    post:
      tags:
        - train
      summary: 'starts, pauses and stops the training'
      description: uses a string enum
      operationId: controlTraining
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: trainStatus
          in: body
          description: new status for training
          required: true
          schema:
            $ref: '#/definitions/TrainStatus'
      responses:
        '200':
          description: Train status updated
  /train/getProcessedImageData:
    get:
      tags:
        - train
      summary: returns a subset of the current train images and the 
        corresponding latent representation and output
      description: ''
      operationId: getProcessedImageData
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: setSize
          in: query
          description: size of the image subset
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Train images updated
          schema:
            $ref: '#/definitions/ProcessedImageData'
  /train/getTrainPerformance:
    get:
      tags:
        - train
      summary: returns the next batch of scalar train variables
      description: as list of dicts
      operationId: getTrainPerformance
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Train status recieved
          schema:
            $ref: '#/definitions/TrainPerformance'
  /visualize/getHiddenLayerLatentClustering:
    get:
      tags:
        - visualize
      summary: returns the clustering of the latent representation of a hidden layer
      description: returns the clustering of the latent representation of a hidden layer
      operationId: getHiddenLayerLatentClustering
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: algorithm
          in: query
          description: determines the clutering algorithm
          required: false
          type: string
        - name: dataset_name
          in: query
          description: determines the dataset which should be clustered
          required: false
          type: string
          default: train_data
        - name: dimension_reduction
          in: query
          description: determines the algorithm for dim reduction
          required: false
          type: string
        #- name: cluster_parameters
        #  in: body
        #  description: determines the clutering parameters
        #  required: false
        #  schema:
        #    $ref: '#/definitions/ClusterParameters'
        - name: layer
          in: query
          description: determines the hidden layer
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: Operation successful
          schema:
            $ref: '#/definitions/Clustering'
  /visualize/generateImageFromSinglePoint:
    get:
      tags:
        - visualize
      summary: generates the AE output from a given point of the sample distribution
      description: ''
      operationId: generateImageFromSinglePoint
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: point_2D
          in: body
          description: 2D Point of the sample distribution
          required: true
          schema:
            $ref: '#/definitions/Point2D'
      responses:
        '200':
          description: Operation successful
          schema:
            $ref: '#/definitions/Image'
  /tune/buildGridSearchANN:
    post:
      tags:
        - tune
      summary: passes all learning and ANN parameters to the server
      description: Includes learning parameters and ANN topology as lists
      operationId: buildGridSearchANN
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: inputParameterLists
          in: body
          description: object with all tunable parameter lists
          required: true
          schema:
            $ref: '#/definitions/ParameterList'
      responses:
        '202':
          description: Parameters successfully commited
        '415':
          description: File parsing error
  /tune/controlTuning:
    post:
      tags:
        - tune
      summary: 'starts, pauses and stops the tuning'
      description: uses a string enum
      operationId: controlTuning
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: trainStatus
          in: body
          description: new status for training
          required: true
          schema:
            $ref: '#/definitions/TrainStatus'
      responses:
        '200':
          description: Train status updated
  /tune/getProcessedImageDataOfCurrentTuning:
    get:
      tags:
        - tune
      summary: >-
        returns a subset of the current train images and the corresponding
        latent representation and output
      description: ''
      operationId: getProcessedImageDataOfCurrentTuning
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: setSize
          in: query
          description: size of the image subset
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Train images updated
          schema:
            $ref: '#/definitions/ProcessedImageData'
  /tune/getTrainPerformanceOfCurrentTuning:
    get:
      tags:
        - tune
      summary: returns the next batch of scalar train variables
      description: as list of dicts
      operationId: getTrainPerformanceOfCurrentTuning
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Train status recieved
          schema:
            $ref: '#/definitions/TrainPerformance'
  /tune/getTuneParameter:
    get:
      tags:
        - tune
      summary: returns the parameter set of the ANN with the given model id
      description: returns a object of type ParameterList
      operationId: getTuneParameter
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: modelId
          in: query
          description: model id of the exspected parameter set
          type: string
          required: true
      responses:
        '200':
          description: Parameters successfully returned
          schema:
            $ref: '#/definitions/ParameterList'
        '404':
          description: Ressource not found
  /tune/getProcessedImageDataOfSpecificTuning:
    get:
      tags:
        - tune
      summary: returns a subset of the current train images and the 
        corresponding latent representation and output
      description: ''
      operationId: getProcessedImageDataOfSpecificTuning
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: setSize
          in: query
          description: size of the image subset
          required: true
          type: integer
          format: int32
        - name: modelId
          in: query
          description: model id of the exspected parameter set
          type: string
          required: true
      responses:
        '200':
          description: Train images updated
          schema:
            $ref: '#/definitions/ProcessedImageData'
  /tune/getTrainPerformanceOfSpecificTuning:
    get:
      tags:
        - tune
      summary: returns the complete set of scalar train variables to a given model
      description: as list of dicts
      operationId: getTrainPerformanceOfSpecificTuning
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: modelId
          in: query
          description: model id of the exspected parameter set
          type: string
          required: true
      responses:
        '200':
          description: Train status recieved
          schema:
            $ref: '#/definitions/TrainPerformance'
definitions:
  ImageData:
    type: object
    properties:
      numImages:
        type: integer
        format: int64
      resX:
        type: integer
        format: int32
      resY:
        type: integer
        format: int32
      images:
        type: array
        items:
          $ref: '#/definitions/Image'
  ClusterParameters:
    type: object
    properties:
      n_clusters:
        type: integer
        format: int32
        example: 10
      init:
        type: string
        example: k-means++
      n_init:
        type: integer
        format: int32
        example: 10
      max_iter:
        type: integer
        format: int32
        example: 300
      tol:
        type: number
        format: float
        example: 0.0001
      precompute_distances:
        type: string
        example: auto
      verbose:
        type: integer
        format: int32
        example: 0
      random_state:
        type: integer
        format: int32
        example: -1
      copy_x:
        type: boolean
        example: true
      n_jobs:
        type: integer
        format: int32
        example: -1
      algorithm:
        type: string
        example: auto
  Clustering:
    type: object
    properties:
      minX:
        type: number
        format: float
      maxX:
        type: number
        format: float
      minY:
        type: number
        format: float
      maxY:
        type: number
        format: float
      nClusters:
        type: integer
        format: int32
      points:
        type: array
        items:
          $ref: '#/definitions/Point2D'
  Point2D:
    type: object
    properties:
      x:
        type: number
        format: float
      y:
        type: number
        format: float
      cluster:
        type: integer
        format: int32
  TrainStatus:
    type: string
    enum:
      - start
      - pause
      - stop
      - resume
    example: '"start"'
  Image:
    type: object
    properties:
      bytestring:
        type: string
      id:
        type: integer
        format: int32
  ParameterList:
    type: object
    properties:
      input_shape:
        type: array
        items:
          type: array
          items:
            type: integer
            format: int32
        example:
          - - -1
            - 28
            - 28
            - 1
      number_of_stacks:
        type: array
        items:
          type: array
          items:
            type: integer
            format: int32
        example:
          - - 12
            - 10
            - 10
            - 6
      filter_sizes:
        type: array
        items:
          type: array
          items:
            type: integer
            format: int32
        example:
          - - 3
            - 3
            - 2
            - 2
      mirror_weights:
        type: array
        items:
          type: boolean
        example:
          - false
        default:
          - false
      activation_function:
        type: array
        items:
          type: string
        example:
          - relu
      batch_size:
        type: array
        items:
          type: integer
          format: int32
        example:
          - 100
        default:
          - 100
      n_epochs:
        type: array
        items:
          type: integer
          format: int32
        example:
          - 50
        default:
          - 50
      use_tensorboard:
        type: boolean
        example: true
        default: true
      verbose:
        type: boolean
        example: true
        default: true
      learning_rate_dict:
        type: array
        items:
          $ref: '#/definitions/LearningRate'
      cost_function_dict:
        type: array
        items:
          $ref: '#/definitions/CostFunction'
      optimizer:
        type: array
        items:
          type: string
        example:
          - AdamOptimizer
        default:
          - AdamOptimizer
      momentum:
        type: array
        items:
          type: number
          format: double
        example:
          - 0.9
        default:
          - 0.9
      random_weights_dict:
        type: array
        items:
          $ref: '#/definitions/RandomFunction'
      random_biases_dict:
        type: array
        items:
          $ref: '#/definitions/RandomFunction'
      session_saver_path:
        type: string
        example: ./save/
        default: ./save/
      load_prev_session:
        type: boolean
        example: false
        default: false
      session_save_duration:
        type: array
        items:
          type: integer
          format: int32
        example:
          - 5
        default:
          - 5
      num_test_pictures:
        type: array
        items:
          type: integer
          format: int32
        example:
          - 100
        default:
          - 100
  LearningRate:
    type: object
    properties:
      learning_rate_function:
        type: string
        example: static
        default: static
      lr_initial_learning_rate:
        type: array
        items:
          type: number
          format: double
        example:
          - 0.01
        default:
          - 0.01
      lr_decay_steps:
        type: array
        items:
          type: integer
          format: int32
        example:
          - 1000
        default:
          - 1000
      lr_decay_rate:
        type: array
        items:
          type: number
          format: double
        example:
          - 0.9
        default:
          - 0.9
      lr_staircase:
        type: array
        items:
          type: boolean
        example:
          - false
        default:
          - false
      lr_boundaries:
        type: array
        items:
          type: array
          items:
            type: integer
            format: int32
        example:
          - - 10000
            - 20000
        default:
          - - 10000
            - 20000
      lr_values:
        type: array
        items:
          type: array
          items:
            type: number
            format: double
        example:
          - - 1
            - 0.5
            - 0.1
        default:
          - - 1
            - 0.5
            - 0.1
      lr_end_learning_rate:
        type: array
        items:
          type: number
          format: double
        example:
          - 0.0001
        default:
          - 0.0001
      lr_power:
        type: array
        items:
          type: number
          format: double
        example:
          - 1
        default:
          - 1
      lr_cycle:
        type: array
        items:
          type: boolean
        example:
          - false
        default:
          - false
  CostFunction:
    type: object
    properties:
      cf_cost_function:
        type: string
        example: squared_pixel_distance
        default: squared_pixel_distance
      cf_max_val:
        type: array
        items:
          type: number
          format: float
        example:
          - 255
        default:
          - 255
      cf_filter_size:
        type: array
        items:
          type: number
          format: int32
        example:
          - 11
        default:
          - 11
      cf_filter_sigma:
        type: array
        items:
          type: number
          format: float
        example:
          - 1.5
        default:
          - 1.5
      cf_k1:
        type: array
        items:
          type: number
          format: float
        example:
          - 0.01
        default:
          - 0.01
      cf_k2:
        type: array
        items:
          type: number
          format: float
        example:
          - 0.03
        default:
          - 0.03
      cf_weights: 
        type: array
        items:
          type: array
          items:
            type: number
            format: float
        example:
          - - 0.0
        default:
          - - 0.0
  RandomFunction:
    type: object
    properties:
      random_function:
        type: string
        example: uniform
      alpha:
        type: array
        items:
          type: number
          format: double
        example:
          - 0.5
        default:
          - 0.5
      beta:
        type: array
        items:
          type: number
          format: double
        example:
          - 1
        default:
          - 1
      mean:
        type: array
        items:
          type: number
          format: double
        example:
          - 0
        default:
          - 0
      stddev:
        type: array
        items:
          type: number
          format: double
        example:
          - 1
        default:
          - 1
      lam:
        type: array
        items:
          type: number
          format: double
        example:
          - 0.5
      minval:
        type: array
        items:
          type: number
          format: double
        example:
          - 0
        default:
          - 0
      maxval:
        type: array
        items:
          type: number
          format: double
        example:
          - 1
        default:
          - 1
      seed:
        type: array
        items:
          type: integer
          format: int32
        example:
          - -1
        default:
          - -1
  ProcessedImageData:
    type: object
    properties:
      inputLayer:
        type: array
        items:
          $ref: '#/definitions/Image'
      latentLayer:
        type: array
        items:
          type: array
          items:
            $ref: '#/definitions/Image'
      outputLayer:
        type: array
        items:
          $ref: '#/definitions/Image'
  TrainPerformance:
    type: object
    properties:
      model_id:
        type: string
      train_status:
        type: string
      cost:
        type: array
        items:
          type: number
          format: double
      currentLearningRate:
        type: array
        items:
          type: number
          format: double
