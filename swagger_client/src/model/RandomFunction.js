/**
 * Convolutional Autoencoder
 * WebUI to build, train and tune a Convolutional Autoencoder
 *
 * OpenAPI spec version: 1.1.8
 * Contact: leon.schuetz@student.uni-tuebingen.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.ConvolutionalAutoencoder) {
      root.ConvolutionalAutoencoder = {};
    }
    root.ConvolutionalAutoencoder.RandomFunction = factory(root.ConvolutionalAutoencoder.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The RandomFunction model module.
   * @module model/RandomFunction
   * @version 1.1.8
   */

  /**
   * Constructs a new <code>RandomFunction</code>.
   * @alias module:model/RandomFunction
   * @class
   */
  var exports = function() {
    var _this = this;










  };

  /**
   * Constructs a <code>RandomFunction</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/RandomFunction} obj Optional instance to populate.
   * @return {module:model/RandomFunction} The populated <code>RandomFunction</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('random_function')) {
        obj['random_function'] = ApiClient.convertToType(data['random_function'], 'String');
      }
      if (data.hasOwnProperty('alpha')) {
        obj['alpha'] = ApiClient.convertToType(data['alpha'], ['Number']);
      }
      if (data.hasOwnProperty('beta')) {
        obj['beta'] = ApiClient.convertToType(data['beta'], ['Number']);
      }
      if (data.hasOwnProperty('mean')) {
        obj['mean'] = ApiClient.convertToType(data['mean'], ['Number']);
      }
      if (data.hasOwnProperty('stddev')) {
        obj['stddev'] = ApiClient.convertToType(data['stddev'], ['Number']);
      }
      if (data.hasOwnProperty('lam')) {
        obj['lam'] = ApiClient.convertToType(data['lam'], ['Number']);
      }
      if (data.hasOwnProperty('minval')) {
        obj['minval'] = ApiClient.convertToType(data['minval'], ['Number']);
      }
      if (data.hasOwnProperty('maxval')) {
        obj['maxval'] = ApiClient.convertToType(data['maxval'], ['Number']);
      }
      if (data.hasOwnProperty('seed')) {
        obj['seed'] = ApiClient.convertToType(data['seed'], ['Number']);
      }
    }
    return obj;
  }

  /**
   * @member {String} random_function
   */
  exports.prototype['random_function'] = undefined;
  /**
   * @member {Array.<Number>} alpha
   */
  exports.prototype['alpha'] = undefined;
  /**
   * @member {Array.<Number>} beta
   */
  exports.prototype['beta'] = undefined;
  /**
   * @member {Array.<Number>} mean
   */
  exports.prototype['mean'] = undefined;
  /**
   * @member {Array.<Number>} stddev
   */
  exports.prototype['stddev'] = undefined;
  /**
   * @member {Array.<Number>} lam
   */
  exports.prototype['lam'] = undefined;
  /**
   * @member {Array.<Number>} minval
   */
  exports.prototype['minval'] = undefined;
  /**
   * @member {Array.<Number>} maxval
   */
  exports.prototype['maxval'] = undefined;
  /**
   * @member {Array.<Number>} seed
   */
  exports.prototype['seed'] = undefined;



  return exports;
}));


